name: CI/CD Workflow
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run test
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm install
      - name: Build app
        run: npm run build
      - name: Cache build artifacts
        uses: actions/cache@v2
        with:
          path: |
            build
          key: ${{ runner.os }}-build-${{ hashFiles('build/**') }}
          restore-keys: |
            ${{ runner.os }}-build-
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: clean project folder
        run: |
          apt-get update && apt-get install -y sshpass
          sshpass -p ${{ secrets.SSHPASSWORD }} ssh kaxada@badging.chaoss.community "rm -rf /var/www/badging.chaoss.io/html/*"

      - name: deploy new project
        run: |
          sshpass -p ${{ secrets.SSHPASSWORD }} scp -r ${{ github.workspace }}/build/* kaxada@badging.chaoss.community:/var/www/badging.chaoss.io/html/
